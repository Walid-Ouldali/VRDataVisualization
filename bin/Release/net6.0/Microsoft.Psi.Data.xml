<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Psi.Data</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema">
            <summary>
            Represents an annotation attribute schema.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema.#ctor(System.String,System.String,Microsoft.Psi.Data.Annotations.IAnnotationValueSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema"/> class.
            </summary>
            <param name="name">The annotation attribute name.</param>
            <param name="description">The annotation attribute description.</param>
            <param name="valueSchema">The annotation value schema for this attribute.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema.Name">
            <summary>
            Gets the name of the annotation attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema.Description">
            <summary>
            Gets a description of the annotation attribute.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema.ValueSchema">
            <summary>
            Gets the annotation value schema for this annotation attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema.CreateAttribute(System.String)">
            <summary>
            Creates an attribute value from a specified string.
            </summary>
            <param name="value">The attribute value as a string.</param>
            <returns>An attribute value which can be used to populate a time interval annotation.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationSchema">
            <summary>
            Represents an annotation schema.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationSchema"/> class.
            </summary>
            <param name="name">The name of the annotation schema.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchema.Name">
            <summary>
            Gets the name of the annotation schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationSchema.AttributeSchemas">
            <summary>
            Gets the collection of attribute schemas.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.LoadFrom(System.String)">
            <summary>
            Loads an annotation schema from disk.
            </summary>
            <param name="fileName">The full path and filename of the annotation schema to load.</param>
            <returns>The requested annotation schema.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.TryLoadFrom(System.String,Microsoft.Psi.Data.Annotations.AnnotationSchema@)">
            <summary>
            Tries to load an annotation schema from disk.
            </summary>
            <param name="fileName">The full path and filename of the annotation schema to load.</param>
            <param name="annotationSchema">The loaded annotation schema if successful.</param>
            <returns>True if the annotation schema is loaded successfully, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.LoadOrDefault(System.String)">
            <summary>
            Loads an annotation schema from disk.
            </summary>
            <param name="fileName">The full path and filename of the annotation schema to load.</param>
            <returns>The requested annotation schema if it exists, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.ContainsAttribute(System.String)">
            <summary>
            Gets a value indicating whether this annotation schema contains a specified attribute.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>True if the annotation schema contains the specified attribute, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.GetAttributeSchema(System.String)">
            <summary>
            Gets the schema for a specified attribute.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The schema for a specified attribute if the attribute exists, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.AddAttributeSchema(Microsoft.Psi.Data.Annotations.AnnotationAttributeSchema)">
            <summary>
            Adds a new attribute to this annotation schema.
            </summary>
            <param name="attributeSchema">The attribute schema to add.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.CreateDefaultTimeIntervalAnnotation(Microsoft.Psi.TimeInterval,System.String)">
            <summary>
            Creates a new time interval annotation instance on a specified track, based on this annotation schema.
            </summary>
            <param name="timeInterval">The time interval.</param>
            <param name="track">The track.</param>
            <returns>A new time interval annotation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationSchema.Save(System.String)">
            <summary>
            Saves this annotation schema to a specified file.
            </summary>
            <param name="fileName">The full path and filename to save this annotation schema to.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1">
            <summary>
            Represents an annotation value schema.
            </summary>
            <typeparam name="T">The datatype of the values contained in the schema.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.#ctor(`0,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1"/> class.
            </summary>
            <param name="defaultValue">The default value for new instances of the schema.</param>
            <param name="fillColor">The fill color.</param>
            <param name="textColor">The text color.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.DefaultValue">
            <summary>
            Gets the default value for this schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.FillColor">
            <summary>
            Gets the fill color.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.TextColor">
            <summary>
            Gets the text color.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.GetDefaultAnnotationValue">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.CreateAnnotationValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.IsValid(Microsoft.Psi.Data.Annotations.IAnnotationValue)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationValueSchema`1.CreateValue(System.String)">
            <summary>
            Creates a value from the specified string.
            </summary>
            <param name="value">The value specified as a string.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.AnnotationValue`1">
            <summary>
            Represents an annotation value of a specific type.
            </summary>
            <typeparam name="T">The datatype of the value.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.AnnotationValue`1.#ctor(`0,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.AnnotationValue`1"/> class.
            </summary>
            <param name="value">The value of the schema value.</param>
            <param name="fillColor">The value of the fill color.</param>
            <param name="textColor">The value of the text color.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValue`1.Value">
            <summary>
            Gets or sets the schema value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValue`1.ValueAsString">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValue`1.FillColor">
            <summary>
            Gets the color for drawing the annotation attribute area's interior.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.AnnotationValue`1.TextColor">
            <summary>
            Gets the color for drawing the annotation attribute value's text.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1">
            <summary>
            Represents an enumerable annotation value schema.
            </summary>
            <typeparam name="T">The datatype of the values in the schema.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.#ctor(System.Collections.Generic.List{Microsoft.Psi.Data.Annotations.AnnotationValue{`0}},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1"/> class.
            </summary>
            <param name="possibleValues">The set of possible annotation values for the schema.</param>
            <param name="defaultValue">The default value for new instances of the schema.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.DefaultValue">
            <summary>
            Gets the default value for this schema.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.PossibleValues">
            <summary>
            Gets or sets the set of possible annotation values.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.CreateAnnotationValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.GetDefaultAnnotationValue">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.IsValid(Microsoft.Psi.Data.Annotations.IAnnotationValue)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.EnumerableAnnotationValueSchema`1.GetPossibleAnnotationValues">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.IAnnotationValue">
            <summary>
            Defines an annotation value in an untyped fashion.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.IAnnotationValue.ValueAsString">
            <summary>
            Gets a string representation of the annotation value.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.IAnnotationValue.FillColor">
            <summary>
            Gets the color for drawing the annotation value area's interior.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.IAnnotationValue.TextColor">
            <summary>
            Gets the color for drawing the annotation value text.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.IAnnotationValueSchema">
            <summary>
            Defines an annotation value schema.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.IAnnotationValueSchema.GetDefaultAnnotationValue">
            <summary>
            Gets the default value for this annotation value schema.
            </summary>
            <returns>The default value.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.IAnnotationValueSchema.CreateAnnotationValue(System.String)">
            <summary>
            Creates an annotation value from a specified string.
            </summary>
            <param name="value">The annotation value string.</param>
            <returns>The annotation value.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.IAnnotationValueSchema.IsValid(Microsoft.Psi.Data.Annotations.IAnnotationValue)">
            <summary>
            Gets a value indicating whether a specified annotation value is valid.
            </summary>
            <param name="annotationValue">The annotation value.</param>
            <returns>True if the specified annotation value is valid, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.IEnumerableAnnotationValueSchema">
            <summary>
            Defines an enumerable annotation value schema, i.e., a value schema with
            a fixed set of possible values.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.IEnumerableAnnotationValueSchema.GetPossibleAnnotationValues">
            <summary>
            Gets the set of possible values for this annotation value schema.
            </summary>
            <returns>The set of possible values.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.Operators">
            <summary>
            Implements stream operators for manipulating annotations.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.ToTimeIntervalAnnotations``1(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,System.Boolean}},System.Func{``0,System.ValueTuple{System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Psi.Data.Annotations.IAnnotationValue}}},Microsoft.Psi.DeliveryPolicy{System.Collections.Generic.Dictionary{``0,System.Boolean}},System.String)">
            <summary>
            Converts a stream of dictionaries with boolean values into a corresponding stream of time interval annotations.
            </summary>
            <typeparam name="TKey">The type of key in the source stream.</typeparam>
            <param name="source">The source stream.</param>
            <param name="annotationConstructor">A function that, given a key, produces a track name and set of attribute values for the annotation.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <param name="name">An optional name for the stream operator.</param>
            <returns>A time interval annotation stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.ToTimeIntervalAnnotations``1(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,System.Boolean}},System.Func{``0,System.ValueTuple{System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Psi.Data.Annotations.IAnnotationValue}}},Microsoft.Psi.DeliveryPolicy{System.Collections.Generic.Dictionary{``0,System.Boolean}},System.String)">
            <summary>
            Converts a stream of dictionaries with boolean values into a corresponding stream of time interval annotations.
            </summary>
            <typeparam name="TKey">The type of key in the source stream.</typeparam>
            <param name="source">The source stream.</param>
            <param name="annotationConstructor">A function that, given a key, produces a value indicating whether to create an annotation, a track name and set of attribute values for the annotation.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <param name="name">An optional name for the stream operator.</param>
            <returns>A time interval annotation stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.ToTimeIntervalAnnotations``2(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,``1}},System.Func{``0,``1,System.ValueTuple{System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Psi.Data.Annotations.IAnnotationValue}}},Microsoft.Psi.DeliveryPolicy{System.Collections.Generic.Dictionary{``0,``1}},System.String)">
            <summary>
            Converts a stream of dictionaries into a corresponding stream of time interval annotations.
            </summary>
            <typeparam name="TKey">The type of key in the source stream.</typeparam>
            <typeparam name="TValue">The type of values in the source stream.</typeparam>
            <param name="source">The source stream.</param>
            <param name="annotationConstructor">A function that, given a key and value, produces a track name and set of attribute values for the annotation.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <param name="name">An optional name for the stream operator.</param>
            <returns>A time interval annotation stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.ToTimeIntervalAnnotations``2(Microsoft.Psi.IProducer{System.Collections.Generic.Dictionary{``0,``1}},System.Func{``0,``1,System.ValueTuple{System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Psi.Data.Annotations.IAnnotationValue}}},Microsoft.Psi.DeliveryPolicy{System.Collections.Generic.Dictionary{``0,``1}},System.String)">
            <summary>
            Converts a stream of dictionaries into a corresponding stream of time interval annotations.
            </summary>
            <typeparam name="TKey">The type of key in the source stream.</typeparam>
            <typeparam name="TValue">The type of values in the source stream.</typeparam>
            <param name="source">The source stream.</param>
            <param name="annotationConstructor">A function that, given a key and value, produces a value indicating whether to create an annotation, a track name and set of attribute values for the annotation.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <param name="name">An optional name for the stream operator.</param>
            <returns>A time interval annotation stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.GetAnnotationTimeIntervalOverlappingWith(System.Collections.Generic.IEnumerable{Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet},System.String,Microsoft.Psi.TimeInterval,Microsoft.Psi.TimeInterval@)">
            <summary>
            Determines whether any annotation on a specified track intersects with the specified time interval.
            </summary>
            <param name="annotations">The set of annotations.</param>
            <param name="track">The track name.</param>
            <param name="timeInterval">The time interval.</param>
            <param name="intersectingTimeInterval">An output parameter returning the time interval for the intersecting annotation.</param>
            <returns>True if any annotation on the specified track intersects with the specified time interval, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.GetTimeIntervalAnnotationAtTime(System.Collections.Generic.IEnumerable{Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet},System.DateTime,System.String)">
            <summary>
            Gets the time interval annotation at a specified time on a specified track, or null if none exists.
            </summary>
            <param name="annotations">The collection of annotations.</param>
            <param name="time">The time.</param>
            <param name="track">The track name.</param>
            <returns>The time interval annotation at a specified time on a specified track, or null if none exists.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.GetTimeIntervalAnnotations(System.Collections.Generic.IEnumerable{Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet},System.String)">
            <summary>
            Gets the list of time interval annotations on the specified track.
            </summary>
            <param name="annotations">The collection of annotations.</param>
            <param name="track">The track name.</param>
            <returns>The list of time interval annotations on the specified track.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.Operators.ToTimeIntervalAnnotations``3(Microsoft.Psi.IProducer{``0},System.Func{``0,System.Collections.Generic.Dictionary{``1,``2}},System.Func{``1,``2,System.ValueTuple{System.Boolean,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Psi.Data.Annotations.IAnnotationValue}}},Microsoft.Psi.DeliveryPolicy{``0},System.String)">
            <summary>
            Converts a stream into a corresponding stream of time interval annotations.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TKey">The type of key in the source stream.</typeparam>
            <typeparam name="TValue">The type of values in the source stream.</typeparam>
            <param name="source">The source stream.</param>
            <param name="selector">A function that, given an input message produces a dictionary of key-values that generates the annotation set.</param>
            <param name="annotationConstructor">A function that, given a key and value, produces a value indicating whether to create an annotation, a track name, and set of attribute values for the annotation.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <param name="name">An optional name for the stream operator.</param>
            <returns>A time interval annotation stream.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.StringAnnotationValueSchema">
            <summary>
            Represents a string annotation value schema.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.StringAnnotationValueSchema.#ctor(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.StringAnnotationValueSchema"/> class.
            </summary>
            <param name="defaultValue">The default value for new instances of the schema.</param>
            <param name="fillColor">The fill color.</param>
            <param name="textColor">The text color.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.StringAnnotationValueSchema.CreateValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation">
            <summary>
            Represents a time interval annotation.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation.#ctor(Microsoft.Psi.TimeInterval,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Psi.Data.Annotations.IAnnotationValue})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation"/> class.
            </summary>
            <param name="interval">The interval over which the annotation occurs.</param>
            <param name="track">The name of the annotation track.</param>
            <param name="attributeValues">The set of attribute values for the annotation.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation.Interval">
            <summary>
            Gets or sets the interval over which this annotation occurs.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation.Track">
            <summary>
            Gets or sets the track of the this annotation.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation.AttributeValues">
            <summary>
            Gets or sets the collection of values in the annotation.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet">
            <summary>
            Represents a set of overlapping time-interval annotations that belong to separate tracks but end at the same time.
            </summary>
            <remarks>
            This data structure provides the basis for persisting overlapping time interval annotations
            in \psi streams. It captures a set of overlapping time interval annotations that are on
            different tracks but end at the same time, captured by <see cref="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.EndTime"/>.
            When persisted to a stream, the originating time of the <see cref="T:Microsoft.Psi.Message`1"/>
            should correspond to the <see cref="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.EndTime"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.#ctor(Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet"/> class.
            </summary>
            <param name="timeIntervalAnnotation">The time interval annotation.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.EndTime">
            <summary>
            Gets the end time for the annotation set.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.Tracks">
            <summary>
            Gets the set of tracks spanned by these time interval annotations.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.Item(System.String)">
            <summary>
            Gets the time interval annotation for a specified track name.
            </summary>
            <param name="track">The track name.</param>
            <returns>The corresponding time interval annotation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.AddAnnotation(Microsoft.Psi.Data.Annotations.TimeIntervalAnnotation)">
            <summary>
            Adds a specified time interval annotation.
            </summary>
            <param name="timeIntervalAnnotation">The time interval annotation to add.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.RemoveAnnotation(System.String)">
            <summary>
            Removes an annotation specified by a track name.
            </summary>
            <param name="track">The track name for the annotation to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Annotations.TimeIntervalAnnotationSet.ContainsTrack(System.String)">
            <summary>
            Gets a value indicating whether the annotation set contains an annotation for the specified track.
            </summary>
            <param name="track">The track name.</param>
            <returns>True if the annotation set contains an annotation for the specified track, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.BatchProcessingTask`1">
            <summary>
            Defines an abstract base class for batch processing tasks.
            </summary>
            <typeparam name="TBatchProcessingTaskConfiguration">The type of the batch processing task configuration object.</typeparam>
            <remarks>
            To implement a batch processing task, implement a derived class from this base abstract.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTask`1.GetDefaultConfiguration">
            <summary>
            Gets the default configuration for the batch procesing task.
            </summary>
            <returns>The default configuration.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTask`1.Run(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,`0)">
            <summary>
            Runs a batch processing task.
            </summary>
            <param name="pipeline">The pipeline used to run the task.</param>
            <param name="sessionImporter">The session importer.</param>
            <param name="exporter">The exporter to write resulting streams to.</param>
            <param name="configuration">The configuration for the batch processing task.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTask`1.Microsoft#Psi#Data#IBatchProcessingTask#GetDefaultConfiguration">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTask`1.Microsoft#Psi#Data#IBatchProcessingTask#Run(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,Microsoft.Psi.Data.BatchProcessingTaskConfiguration)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.BatchProcessingTaskAttribute">
            <summary>
            Represents a batch processing task attribute.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.BatchProcessingTaskAttribute"/> class.
            </summary>
            <param name="name">Name of this task.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.Name">
            <summary>
            Gets the task name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.Description">
            <summary>
            Gets or sets the task description.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.IconSourcePath">
            <summary>
            Gets or sets the path to the associated icon.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.ReplayAllRealTime">
            <summary>
            Gets or sets a value indicating whether to use the <see cref="F:Microsoft.Psi.ReplayDescriptor.ReplayAllRealTime"/> descriptor when executing this batch task.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.DeliveryPolicyLatestMessage">
            <summary>
            Gets or sets a value indicating whether to use the <see cref="P:Microsoft.Psi.DeliveryPolicy.LatestMessage"/> pipeline-level delivery policy when executing this batch task.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.EnableDiagnostics">
            <summary>
            Gets or sets a value indicating whether to enable pipeline diagnostics when running this batch task.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.OutputStoreName">
            <summary>
            Gets or sets the output store name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.OutputStorePath">
            <summary>
            Gets or sets the output store path.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskAttribute.OutputPartitionName">
            <summary>
            Gets or sets the output partition name.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.BatchProcessingTaskConfiguration">
            <summary>
            Represents a configuration for a batch processing task.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.BatchProcessingTaskConfiguration"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.Name">
            <summary>
            Gets the name of the configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.ReplayAllRealTime">
            <summary>
            Gets or sets a value indicating whether to use the <see cref="F:Microsoft.Psi.ReplayDescriptor.ReplayAllRealTime"/> descriptor when executing this batch task.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.DeliveryPolicyLatestMessage">
            <summary>
            Gets or sets a value indicating whether to use the <see cref="P:Microsoft.Psi.DeliveryPolicy.LatestMessage"/> pipeline-level delivery policy when executing this batch task.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.EnableDiagnostics">
            <summary>
            Gets or sets a value indicating whether to enable pipeline diagnostics when running this batch task.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.OutputStoreName">
            <summary>
            Gets or sets the output store name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.OutputStorePath">
            <summary>
            Gets or sets the output store path.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.OutputPartitionName">
            <summary>
            Gets or sets the output partition name.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.Load(System.String)">
            <summary>
            Loads a configuration from the specified file.
            </summary>
            <param name="fileName">The full path name of the configuration file.</param>
            <returns>The loaded configuration.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.Save(System.String)">
            <summary>
            Saves the configuration to a file.
            </summary>
            <param name="fileName">The full path name of the configuration file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskConfiguration.Validate(System.String@)">
            <summary>
            Validates the configuration.
            </summary>
            <param name="error">A message describing the issue if the configuration is invalid.</param>
            <returns>True if the configuration is valid, false otherwise.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.BatchProcessingTaskMetadata">
            <summary>
            Represents metadata about a dynamically loaded batch processing task
            and provides functionality for configuring and executing the task.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskMetadata.#ctor(System.Type,Microsoft.Psi.Data.BatchProcessingTaskAttribute,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.BatchProcessingTaskMetadata"/> class.
            </summary>
            <param name="batchProcessingTaskType">The batch processing task type.</param>
            <param name="batchProcessingTaskAttribute">The batch processing task attribute.</param>
            <param name="batchProcessingTaskConfigurationsPath">The folder in which batch processing task configurations are saved.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskMetadata.#ctor(System.Reflection.MethodInfo,Microsoft.Psi.Data.BatchProcessingTaskAttribute,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.BatchProcessingTaskMetadata"/> class.
            </summary>
            <param name="batchProcessingTaskMethodInfo">The batch processing method info.</param>
            <param name="batchProcessingTaskAttribute">The batch processing task attribute.</param>
            <param name="batchProcessingTaskConfigurationsPath">The folder in which batch processing task configurations are saved.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskMetadata.Name">
            <summary>
            Gets the batch processing task name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskMetadata.Description">
            <summary>
            Gets the batch processing task description.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskMetadata.IconSourcePath">
            <summary>
            Gets the batch processing task icon source path.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskMetadata.ConfigurationsPath">
            <summary>
            Gets the folder under which configurations for this batch processing task should be stored.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskMetadata.MostRecentlyUsedConfiguration">
            <summary>
            Gets or sets the name of the most recently used configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.BatchProcessingTaskMetadata.IsMethodBased">
            <summary>
            Gets a value indicating whether this batch processing task is method based.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskMetadata.GetDefaultConfiguration">
            <summary>
            Gets the default configuration for the batch processing task.
            </summary>
            <returns>The default configuration.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskMetadata.Run(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,Microsoft.Psi.Data.BatchProcessingTaskConfiguration)">
            <summary>
            Runs the batch processing task.
            </summary>
            <param name="pipeline">The pipeline to run the task on.</param>
            <param name="sessionImporter">The session importer.</param>
            <param name="exporter">The exporter.</param>
            <param name="configuration">The task configuration.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.BatchProcessingTaskOperators">
            <summary>
            Provides static extension methods related to batch processing tasks.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.BatchProcessingTaskOperators.IsBatchProcessingTaskType(System.Type)">
            <summary>
            Checks if a specified type is a batch processing task type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the specified type is a batch processing task type, o/w false.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Converters.JsonColorConverter">
            <summary>
            Represents a JSON color converter.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.JsonColorConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.JsonColorConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.JsonColorConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.Converters.RelativePathConverter">
            <summary>
            Provides methods to convert a full path to a relative path and vice-versa during JSON serialization.
            </summary>
            <remarks>
            The root path to which converted paths should be made relative is passed in the serializer StreamingContext.
            In addition, the StreamingContext state File flag should be set, or no conversion will take place.
            </remarks>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.RelativePathConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.String,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Converters.RelativePathConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.String,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.Dataset">
            <summary>
            Represents a dataset (collection of sessions) to be reasoned over.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.Dataset.DefaultName">
            <summary>
            Default name of a dataset.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Dataset"/> class.
            </summary>
            <param name="name">The name of the new dataset. Default is <see cref="F:Microsoft.Psi.Data.Dataset.DefaultName"/>.</param>
            <param name="filename">An optional filename that indicates the location to save the dataset.<see cref="F:Microsoft.Psi.Data.Dataset.DefaultName"/>.</param>
            <param name="autoSave">Whether the dataset automatically autosave changes if a path is given (optional, default is false).</param>
        </member>
        <member name="E:Microsoft.Psi.Data.Dataset.DatasetChanged">
            <summary>
            Event raise when the dataset's structure changed.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Name">
            <summary>
            Gets or sets the name of this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Filename">
            <summary>
            Gets or sets the current save path of this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.AutoSave">
            <summary>
            Gets or sets a value indicating whether autosave is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.HasUnsavedChanges">
            <summary>
            Gets a value indicating whether changes to this dataset have been saved.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.MessageOriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.MessageCreationTimeInterval">
            <summary>
            Gets the creation time interval (earliest to latest) of the messages in this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.TimeInterval">
            <summary>
            Gets the stream open-close time interval in this dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Size">
            <summary>
            Gets the size of the dataset, in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.StreamCount">
            <summary>
            Gets the number of streams in the dataset.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Dataset.Sessions">
            <summary>
            Gets the collection of sessions in this dataset.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.Load(System.String,System.Boolean)">
            <summary>
            Loads a dataset from the specified file.
            </summary>
            <param name="filename">The name of the file that contains the dataset to be loaded.</param>
            <param name="autoSave">A value to indicate whether to enable autosave (optional, default is false).</param>
            <returns>The newly loaded dataset.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateFromStore(Microsoft.Psi.Data.IStreamReader,System.String,System.String)">
            <summary>
            Creates a new dataset from an existing data store.
            </summary>
            <param name="streamReader">The stream reader of the data store.</param>
            <param name="sessionName">The session name (optional, defaults to streamReader.Name).</param>
            <param name="partitionName">The partition name (optional, defaults to streamReader.).</param>
            <returns>The newly created dataset.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateSession(System.String)">
            <summary>
            Creates a new session within the dataset.
            </summary>
            <param name="sessionName">The session name.</param>
            <returns>The newly created session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.RemoveSession(Microsoft.Psi.Data.Session)">
            <summary>
            Removes the specified session from the dataset.
            </summary>
            <param name="session">The session to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.Append(Microsoft.Psi.Data.Dataset)">
            <summary>
            Appends sessions from an input dataset to this dataset.
            </summary>
            <param name="inputDataset">The dataset to append from.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.SaveAs(System.String)">
            <summary>
            Saves this dataset.
            </summary>
            <param name="filename">The filename that indicates the location to save the dataset.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.Save">
            <summary>
            Saves this dataset.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSession(System.String)">
            <summary>
            Creates and adds an empty session with the specified name to the dataset.
            </summary>
            <param name="sessionName">The session name.</param>
            <returns>The session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSessionFromStore(Microsoft.Psi.Data.IStreamReader,System.String,System.String)">
            <summary>
            Creates and adds a session to this dataset using the specified parameters.
            </summary>
            <param name="streamReader">The stream reader of the data store.</param>
            <param name="sessionName">The name of the session (optional, defaults to streamReader.Name).</param>
            <param name="partitionName">The partition name.</param>
            <returns>The newly added session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.ComputeDerived``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,``0})">
            <summary>
            Compute derived results for each session in the dataset.
            </summary>
            <typeparam name="TResult">The type of data of the derived result.</typeparam>
            <param name="computeDerived">The action to be invoked to derive results.</param>
            <returns>List of results.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter},System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter},System.String,System.Boolean,System.String,System.Func{Microsoft.Psi.Data.Session,System.String},Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePathFunction">An optional function to determine output store path for each given session. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The output partition name to be created.</param>
            <param name="overwrite">Flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">The replay descriptor to us.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An object that can be used for reporting progress.</param>
            <param name="cancellationToken">A token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.CreateDerivedPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.Func{Microsoft.Psi.Data.Session,System.String},Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for each session in the dataset.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePathFunction">An optional function to determine output store path for each given session. Default is the path for the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSessionsFromPsiStores(System.String,System.String)">
            <summary>
            Adds sessions from data stores located in the specified path.
            </summary>
            <param name="path">The path that contains the data stores.</param>
            <param name="partitionName">The name of the partition to be added when adding a new session. Default is null.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.OnDatasetChanged">
            <summary>
            Method called when structure of the dataset changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Dataset.AddSession(Microsoft.Psi.Data.Session)">
            <summary>
            Adds a session to this dataset and updates its originating time interval.
            </summary>
            <param name="session">The session to be added.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.DatasetExtensions">
            <summary>
            Represents helper methods for working with \psi store datasets.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.DatasetExtensions.AddSessionFromPsiStore(Microsoft.Psi.Data.Dataset,System.String,System.String,System.String,System.String)">
            <summary>
            Creates and adds a session to this dataset using the specified parameters.
            </summary>
            <param name="dataset">This dataset.</param>
            <param name="storeName">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="storePath">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="sessionName">The name of the session (optional, defaults to streamReader.Name).</param>
            <param name="partitionName">The partition name.</param>
            <returns>The newly added session.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.DatasetExtensions.AddPsiStorePartition(Microsoft.Psi.Data.Session,System.String,System.String,System.String)">
            <summary>
            Creates and adds a data partition from an existing \psi data store.
            </summary>
            <param name="session">This session.</param>
            <param name="storeName">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="storePath">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="partitionName">The partition name. Default is stream reader name.</param>
            <returns>The newly added data partition.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.IndexHelper">
            <summary>
            Represents helper methods for psi indices.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.IndexHelper.GetIndexForTime(System.DateTime,System.Int32,System.Func{System.Int32,System.DateTime},Microsoft.Psi.Data.NearestType)">
            <summary>
            Gets the index corresponding to a specified time for a collection of indices that are ordered by time.
            </summary>
            <param name="dateTime">The time to find the index for.</param>
            <param name="count">The number of items in the collection.</param>
            <param name="timeAtIndex">A function that returns the time for a given index.</param>
            <param name="nearestType">Specifies whether to look for nearest, next, or previous index.</param>
            <returns>The index id closest to the specified time, using the specified interpolation style.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.IndexHelper.GetIndexForTime(System.DateTime,Microsoft.Psi.RelativeTimeInterval,System.Int32,System.Func{System.Int32,System.DateTime})">
            <summary>
            Gets the index id corresponding to a specified time for
            a collection of indices that are ordered by time.
            </summary>
            <param name="dateTime">The time to find the index for.</param>
            <param name="epsilonTimeInterval">The epsilon interval used to determine if an index is close enough to the specified time to be counted as a match.</param>
            <param name="count">The number of items in the index collection.</param>
            <param name="timeAtIndex">A function that returns the time for a given index id.</param>
            <returns>The index id closest to the specified time, using the specified interpolation style.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.NearestType">
            <summary>
            Defines various modes for finding a nearest message to a specified time.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.NearestType.Nearest">
            <summary>
            The nearest message.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.NearestType.Previous">
            <summary>
            The nearest previous message.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.NearestType.Next">
            <summary>
            The nearest next message.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.Helpers.SafeSerializationBinder">
            <summary>
            Represents a JSON serialization binder that will only deserialize
            types in assemblies referenced directly by the application or
            assemblies that have been allowed to load by the user.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Helpers.SafeSerializationBinder.BindToName(System.Type,System.String@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Psi.Data.Helpers.SafeSerializationBinder.BindToType(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Psi.Data.IBatchProcessingTask">
            <summary>
            Defines a batch processing task.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.IBatchProcessingTask.GetDefaultConfiguration">
            <summary>
            Gets the default configuration.
            </summary>
            <returns>The default configuration.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.IBatchProcessingTask.Run(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,Microsoft.Psi.Data.BatchProcessingTaskConfiguration)">
            <summary>
            Runs the batch processing task with a specified configuration.
            </summary>
            <param name="pipeline">The pipeline to run the task.</param>
            <param name="sessionImporter">The session importer.</param>
            <param name="exporter">The exporter to use.</param>
            <param name="configuration">The configuration for the task.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.IPartition">
            <summary>
            Defines a partition that can be added to a session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.Name">
            <summary>
            Gets or sets the partition name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.IsStoreValid">
            <summary>
            Gets a value indicating whether the the store for the partition is valid and readable.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.MessageOriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.MessageCreationTimeInterval">
            <summary>
            Gets the creation time interval (earliest to latest) of the messages in this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.TimeInterval">
            <summary>
            Gets the time interval between open and closed time for all streams in this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.Size">
            <summary>
            Gets the size of the partition in bytes, if known.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StreamCount">
            <summary>
            Gets the number of streams in the partition, if known.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.Session">
            <summary>
            Gets or sets the session that this partition belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StoreName">
            <summary>
            Gets the store name of this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StorePath">
            <summary>
            Gets the store path of this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.StreamReaderTypeName">
            <summary>
            Gets the type name of the IStreamReader for this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.IPartition.AvailableStreams">
            <summary>
            Gets an enumerable of stream metadata contained in this partition.
            </summary>
        </member>
        <member name="T:Microsoft.Psi.Data.ISimpleWriter">
            <summary>
            Defines an interface for all simple writers of data stores.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.ISimpleWriter.Name">
            <summary>
            Gets the name of the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.ISimpleWriter.Path">
            <summary>
            Gets the path of the data store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.ISimpleWriter.CreateStore(System.String,System.String,System.Boolean,Microsoft.Psi.Serialization.KnownSerializers)">
            <summary>
            Creates the specified store.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the persisted file will reside.</param>
            <param name="createSubdirectory">If true, a numbered subdirectory is created for this store.</param>
            <param name="serializers">Optional set of serialization configuration (known types, serializers, known assemblies).</param>
        </member>
        <member name="M:Microsoft.Psi.Data.ISimpleWriter.CreateStream``1(Microsoft.Psi.IStreamMetadata,System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{``0}})">
            <summary>
            Creates a stream of messages in the data store.
            </summary>
            <typeparam name="TData">The underlying type of the messaging in the data store.</typeparam>
            <param name="metadata">The metadata of the new stream.</param>
            <param name="source">The source of message to be written to the data store.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.ISimpleWriter.WriteAll(Microsoft.Psi.ReplayDescriptor,System.Threading.CancellationToken)">
            <summary>
            Writes all of the created streams to the data store.
            </summary>
            <param name="descriptor">Replay descriptor defining the bounds to write.</param>
            <param name="cancelationToken">The token to monitor for cancellation requests.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonExporter">
            <summary>
            Component that writes messages to a multi-stream JSON store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.#ctor(Microsoft.Psi.Pipeline,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="createSubdirectory">If true, a numbered sub-directory is created for this store.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.#ctor(Microsoft.Psi.Pipeline,System.String,Microsoft.Psi.Data.Json.JsonStoreWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="writer">The underlying store writer.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonExporter.Name">
            <summary>
            Gets the name of the store being written to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonExporter.Path">
            <summary>
            Gets the path to the store being written to if the store is persisted to disk, or null if the store is volatile.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.Dispose">
            <summary>
            Closes the store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.Write``1(Microsoft.Psi.Emitter{``0},System.String,Microsoft.Psi.DeliveryPolicy{``0})">
            <summary>
            Writes the specified stream to this multi-stream store.
            </summary>
            <typeparam name="T">The type of messages in the stream.</typeparam>
            <param name="source">The source stream to write.</param>
            <param name="name">The name of the persisted stream.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonExporter.Write(Microsoft.Psi.Emitter{Microsoft.Psi.Message{Newtonsoft.Json.Linq.JToken}},Microsoft.Psi.Data.Json.JsonStreamMetadata,Microsoft.Psi.DeliveryPolicy{Microsoft.Psi.Message{Newtonsoft.Json.Linq.JToken}})">
            <summary>
            Writes the specified stream to this multi-stream store.
            </summary>
            <param name="source">The source stream to write.</param>
            <param name="metadata">The stream metadata of the stream.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonGenerator">
            <summary>
            Component that plays back data from a JSON store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.#ctor(Microsoft.Psi.Pipeline,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="storeName">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="storePath">The directory in which the main persisted file resides.</param>
            <param name="name">An optional name for the component.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.#ctor(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.Json.JsonStoreReader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> class.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="reader">The underlying store reader.</param>
            <param name="name">An optional name for the component.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.Name">
            <summary>
            Gets the name of the application that generated the persisted files, or the root name of the files.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.Path">
            <summary>
            Gets the directory in which the main persisted file resides.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.AvailableStreams">
            <summary>
            Gets an enumerable of stream metadata contained in the underlying data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonGenerator.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in the underlying data store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.Contains(System.String)">
            <summary>
            Determines whether the underlying data store contains the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>true if store contains the specified stream, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.GetMetadata(System.String)">
            <summary>
            Gets the stream metadata for the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.OpenStream``1(System.String)">
            <summary>
            Opens the specified stream for reading and returns an emitter for use in the pipeline.
            </summary>
            <typeparam name="T">Type of data in underlying stream.</typeparam>
            <param name="streamName">The name of the stream.</param>
            <returns>The newly created emitter that generates messages from the stream of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonGenerator.GenerateNext(System.DateTime)">
            <summary>
            GenerateNext is called by the Generator base class when the next sample should be read.
            </summary>
            <param name="currentTime">The originating time of the message that triggered the current call to GenerateNext.</param>
            <returns>The originating time at which to read the next sample.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonSimpleWriter">
            <summary>
            Represents a simple writer for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonSimpleWriter"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="createSubdirectory">If true, a numbered subdirectory is created for this store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonSimpleWriter"/> class.
            </summary>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonSimpleWriter.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonSimpleWriter.Path">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonSimpleWriter.Writer">
            <summary>
            Gets or sets the underlying store writer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.CreateStore(System.String,System.String,System.Boolean,Microsoft.Psi.Serialization.KnownSerializers)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.CreateStream``1(Microsoft.Psi.IStreamMetadata,System.Collections.Generic.IEnumerable{Microsoft.Psi.Message{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonSimpleWriter.WriteAll(Microsoft.Psi.ReplayDescriptor,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStore">
            <summary>
            Provides static methods to access multi-stream JSON stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStore.Create(Microsoft.Psi.Pipeline,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new multi-stream JSON store and returns an <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> instance which can be used to write streams to this store.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the store to create.</param>
            <param name="rootPath">The path to use. If null, an in-memory store is created.</param>
            <param name="createSubdirectory">Indicates whether to create a numbered subdirectory for each execution of the pipeline.</param>
            <returns>An <see cref="T:Microsoft.Psi.Data.Json.JsonExporter"/> instance that can be used to write streams.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStore.Open(Microsoft.Psi.Pipeline,System.String,System.String)">
            <summary>
            Opens a JSON store for read and returns an <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> instance which can be used to inspect the store and open the streams.
            </summary>
            <param name="pipeline">The pipeline to add the component to.</param>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides.</param>
            <returns>A <see cref="T:Microsoft.Psi.Data.Json.JsonGenerator"/> instance that can be used to open streams and read messages.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStore.Write``1(Microsoft.Psi.IProducer{``0},System.String,Microsoft.Psi.Data.Json.JsonExporter,Microsoft.Psi.DeliveryPolicy{``0})">
            <summary>
            Writes the specified stream to a multi-stream JSON store.
            </summary>
            <typeparam name="TIn">The type of messages in the stream.</typeparam>
            <param name="source">The source stream to write.</param>
            <param name="name">The name of the persisted stream.</param>
            <param name="writer">The store writer, created by e.g. <see cref="M:Microsoft.Psi.Data.Json.JsonStore.Create(Microsoft.Psi.Pipeline,System.String,System.String,System.Boolean)"/>.</param>
            <param name="deliveryPolicy">An optional delivery policy.</param>
            <returns>The input stream.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStoreBase">
            <summary>
            Represents the common elements of JSON data stores.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.Json.JsonStoreBase.DefaultExtension">
            <summary>
            Default extension for the underlying file.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStoreBase"/> class.
            </summary>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Extension">
            <summary>
            Gets or sets the underlying file extension.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Name">
            <summary>
            Gets or sets the name of the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Path">
            <summary>
            Gets or sets the path of the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreBase.Serializer">
            <summary>
            Gets or sets the JSON serializer.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreBase.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStoreReader">
            <summary>
            Represents a reader for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStoreReader"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreReader.AvailableStreams">
            <summary>
            Gets an enumerable of stream metadata contained in the underlying data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreReader.OriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in the data store.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStoreReader.Size">
            <summary>
            Gets the size of the json store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.CloseStream(System.String)">
            <summary>
            Closes the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.CloseStream(System.Int32)">
            <summary>
            Closes the specified stream.
            </summary>
            <param name="id">The id of the stream.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.CloseAllStreams">
            <summary>
            Close all streams.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Contains(System.String)">
            <summary>
            Determines whether the data store contains the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>true if store contains the specified stream, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.GetMetadata(System.String)">
            <summary>
            Gets the stream metadata for the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.GetMetadata(System.Int32)">
            <summary>
            Gets the stream metadata for the specified stream.
            </summary>
            <param name="id">The id of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.OpenStream(System.String)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="streamName">The name of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.OpenStream(System.Int32)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="id">The id of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.OpenStream(Microsoft.Psi.Data.Json.JsonStreamMetadata)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="metadata">The metadata of the stream.</param>
            <returns>true if the stream was opened; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.MoveNext(Microsoft.Psi.Envelope@)">
            <summary>
            Positions the reader to the next message.
            </summary>
            <param name="envelope">The envelope associated with the message read.</param>
            <returns>True if there are more messages, false if no more messages are available.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Read(Newtonsoft.Json.Linq.JToken@)">
            <summary>
            Reads the next message from any one of the enabled streams (in serialized form) into the specified buffer.
            </summary>
            <param name="data">The data associated with the message read.</param>
            <returns>True if there are more messages, false if no more messages are available.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreReader.Seek(Microsoft.Psi.ReplayDescriptor)">
            <summary>
            Seek to envelope in stream according to specified replay descriptor.
            </summary>
            <param name="descriptor">The replay descriptor.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStoreWriter">
            <summary>
            Represents a writer for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStoreWriter"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="createSubdirectory">If true, a numbered subdirectory is created for this store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.OpenStream(Microsoft.Psi.Data.Json.JsonStreamMetadata)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="metadata">The metadata of the stream.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.OpenStream(System.Int32,System.String,System.String)">
            <summary>
            Opens the stream for the specified stream.
            </summary>
            <param name="streamId">The stream id.</param>
            <param name="streamName">The stream name.</param>
            <param name="typeName">The stream type name.</param>
            <returns>The stream metadata.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStoreWriter.Write(Newtonsoft.Json.Linq.JToken,Microsoft.Psi.Envelope)">
            <summary>
            Writes the next message to the data store.
            </summary>
            <param name="data">The data associated with the message write.</param>
            <param name="envelope">The envelope associated with the message write.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStreamMetadata">
            <summary>
            Represents metadata used in storing stream data in a JSON store.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamMetadata"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamMetadata"/> class.
            </summary>
            <param name="name">The name of the stream the metadata represents.</param>
            <param name="id">The id of the stream the metadata represents.</param>
            <param name="typeName">The name of the type of data contained in the stream the metadata represents.</param>
            <param name="supplementalMetadataTypeName">The name of the type of supplemental metadata for the stream the metadata represents.</param>
            <param name="storeName">The name of the store containing the stream.</param>
            <param name="storePath">The path of the store containing the stream.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.Id">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.StoreName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.StorePath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.FirstMessageCreationTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.LastMessageCreationTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.FirstMessageOriginatingTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.LastMessageOriginatingTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.MessageCount">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.MessageSizeCumulativeSum">
            <summary>
            Gets or sets the total size (bytes) of messages in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.LatencyCumulativeSum">
            <summary>
            Gets or sets the cumulative sum of latencies of messages in the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.AverageMessageSize">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.AverageMessageLatencyMs">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.SupplementalMetadataTypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.OpenedTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.ClosedTime">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamMetadata.IsClosed">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.GetSupplementalMetadata``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.Update(Microsoft.Psi.Envelope,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamMetadata.Update(Microsoft.Psi.TimeInterval,Microsoft.Psi.TimeInterval)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Json.JsonStreamReader">
            <summary>
            Represents a stream reader for JSON data stores.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="name">The name of the application that generated the persisted files, or the root name of the files.</param>
            <param name="path">The directory in which the main persisted file resides or will reside, or null to create a volatile data store.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(Microsoft.Psi.Data.Json.JsonStreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="that">Existing <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> used to initialize new instance.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Json.JsonStreamReader"/> class.
            </summary>
            <param name="extension">The extension for the underlying file.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.AvailableStreams">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Path">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.MessageOriginatingTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.MessageCreationTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.StreamTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Size">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.StreamCount">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Psi.Data.Json.JsonStreamReader.Reader">
            <summary>
            Gets or sets the underlying store reader.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.CloseAllStreams">
            <summary>
            Closes all open streams.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.OpenNew">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.OpenStream``1(System.String,System.Action{``0,Microsoft.Psi.Envelope},System.Func{``0},System.Action{``0},System.Action{System.Runtime.Serialization.SerializationException})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.OpenStreamIndex``1(System.String,System.Action{System.Func{Microsoft.Psi.Data.IStreamReader,``0},Microsoft.Psi.Envelope},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.ReadAll(Microsoft.Psi.ReplayDescriptor,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.Seek(Microsoft.Psi.TimeInterval,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.MoveNext(Microsoft.Psi.Envelope@)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.IsLive">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.GetStreamMetadata(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.GetSupplementalMetadata``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Json.JsonStreamReader.ContainsStream(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.ObservableObject">
            <summary>
            Provides an implementation of <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> and <see cref="T:System.ComponentModel.INotifyPropertyChanging"/> for use in implementing bindable objects.
            </summary>
        </member>
        <member name="E:Microsoft.Psi.Data.ObservableObject.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="E:Microsoft.Psi.Data.ObservableObject.PropertyChanging">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.ObservableObject.RaisePropertyChanged(System.String)">
            <summary>
            Raises the property changed event for the specified property.
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.ObservableObject.RaisePropertyChanging(System.String)">
            <summary>
            Raises the property changing event for the specified property.
            </summary>
            <param name="propertyName">The name of the property that is about to be changed.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.ObservableObject.Set``1(System.String,``0@,``0)">
            <summary>
            Sets the value of the specified property and raises the appropriate events.
            </summary>
            <typeparam name="T">The type of the property to be set.</typeparam>
            <param name="propertyName">The name of the property to be set.</param>
            <param name="property">A reference to the property to be set.</param>
            <param name="value">The value to set the property to.</param>
            <returns>True if the value changed, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Psi.Data.Partition`1">
            <summary>
            Defines a base class of partitions that can be added to a session.
            </summary>
            <typeparam name="TStreamReader">Type of IStreamReader used to read partition.</typeparam>
        </member>
        <member name="M:Microsoft.Psi.Data.Partition`1.#ctor(Microsoft.Psi.Data.Session,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Partition`1"/> class.
            </summary>
            <param name="session">The session that this partition belongs to.</param>
            <param name="streamReader">Stream reader used to read partition.</param>
            <param name="name">The partition name.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Partition`1.#ctor(Microsoft.Psi.Data.Session,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Partition`1"/> class.
            </summary>
            <param name="session">The session that this partition belongs to.</param>
            <param name="storeName">The store name of this partition.</param>
            <param name="storePath">The store path of this partition.</param>
            <param name="streamReaderTypeName">Stream reader used to read partition.</param>
            <param name="name">The partition name.</param>
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.Name">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.IsStoreValid">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.MessageOriginatingTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.MessageCreationTimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.TimeInterval">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.Size">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StreamCount">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StreamReader">
            <summary>
            Gets the data store reader for this partition.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.Session">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StoreName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StorePath">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.StreamReaderTypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Psi.Data.Partition`1.AvailableStreams">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Psi.Data.Partition`1.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Psi.Data.Session">
            <summary>
            Represents a session (collection of partitions) to be reasoned over.
            </summary>
        </member>
        <member name="F:Microsoft.Psi.Data.Session.DefaultName">
            <summary>
            Default name of a session.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.#ctor(Microsoft.Psi.Data.Dataset,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Psi.Data.Session"/> class.
            </summary>
            <param name="dataset">The dataset that this session belongs to.</param>
            <param name="name">The session name.</param>
        </member>
        <member name="E:Microsoft.Psi.Data.Session.SessionChanged">
            <summary>
            Event invoked when the structure of the session changed.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Dataset">
            <summary>
            Gets the dataset that this session belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Name">
            <summary>
            Gets or sets the session name.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.MessageOriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in this session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.MessageCreationTimeInterval">
            <summary>
            Gets the creation time interval (earliest to latest) of the messages in this session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.TimeInterval">
            <summary>
            Gets the stream open-close time interval in this session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Duration">
            <summary>
            Gets the session duration.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Size">
            <summary>
            Gets the size of the session, in bytes.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.StreamCount">
            <summary>
            Gets the number of streams in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Partitions">
            <summary>
            Gets the collection of partitions in this session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.Session.Item(System.String)">
            <summary>
            Gets the partition specified by a name.
            </summary>
            <param name="partitionName">The name of the partition.</param>
            <returns>The partition with the specified name.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.AddStorePartition``1(``0,System.String)">
            <summary>
            Creates and adds a data partition from an existing data store.
            </summary>
            <typeparam name="TStreamReader">Type of IStreamReader used to read data store.</typeparam>
            <param name="streamReader">The stream reader of the data store.</param>
            <param name="partitionName">The partition name. Default is stream reader name.</param>
            <returns>The newly added data partition.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.CreateDerivedPartitionAsync(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter},System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for this session.
            </summary>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the same path at the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.CreateDerivedPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for this session.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is the output partition name.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is the same path at the first partition in the session.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.CreateDerivedPsiPartitionAsync``1(System.Action{Microsoft.Psi.Pipeline,Microsoft.Psi.Data.SessionImporter,Microsoft.Psi.Data.Exporter,``0},``0,System.String,System.Boolean,System.String,System.String,Microsoft.Psi.ReplayDescriptor,Microsoft.Psi.DeliveryPolicy,System.Boolean,System.IProgress{System.ValueTuple{System.String,System.Double}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously computes a derived partition for the session.
            </summary>
            <typeparam name="TParameter">The type of parameter passed to the action.</typeparam>
            <param name="computeDerived">The action to be invoked to compute derive partitions.</param>
            <param name="parameter">The parameter to be passed to the action.</param>
            <param name="outputPartitionName">The name of the output partition to be created.</param>
            <param name="overwrite">An optional flag indicating whether the partition should be overwritten. Default is false.</param>
            <param name="outputStoreName">An optional name for the output data store. Default is null.</param>
            <param name="outputStorePath">An optional path for the output data store. Default is null.</param>
            <param name="replayDescriptor">An optional replay descriptor to use when creating the derived partition.</param>
            <param name="deliveryPolicy">Pipeline-level delivery policy to use when creating the derived partition.</param>
            <param name="enableDiagnostics">Indicates whether to enable collecting and publishing diagnostics information on the Pipeline.Diagnostics stream.</param>
            <param name="progress">An optional progress object to be used for reporting progress.</param>
            <param name="cancellationToken">An optional token for canceling the asynchronous task.</param>
            <returns>A task that represents the asynchronous compute derive partition operation.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.RemovePartition(Microsoft.Psi.Data.IPartition)">
            <summary>
            Removes a specified partition from the session.
            </summary>
            <param name="partition">The partition to remove.</param>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.OnSessionChanged">
            <summary>
            Method called when structure of the session changed.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.Session.AddPartition(Microsoft.Psi.Data.IPartition)">
            <summary>
            Adds a partition to this session and updates its originating time interval.
            </summary>
            <param name="partition">The partition to be added.</param>
        </member>
        <member name="T:Microsoft.Psi.Data.SessionImporter">
            <summary>
            Defines a class used in importing data into a session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.Name">
            <summary>
            Gets the name of the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.MessageOriginatingTimeInterval">
            <summary>
            Gets the originating time interval (earliest to latest) of the messages in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.MessageCreationTimeInterval">
            <summary>
            Gets the interval between the creation time of the first and last message in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.StreamTimeInterval">
            <summary>
            Gets the interval between the opened and closed times, across all streams in the session.
            </summary>
        </member>
        <member name="P:Microsoft.Psi.Data.SessionImporter.PartitionImporters">
            <summary>
            Gets a dictionary of named importers.
            </summary>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.Open(Microsoft.Psi.Pipeline,Microsoft.Psi.Data.Session,System.Boolean)">
            <summary>
            Opens a session importer.
            </summary>
            <param name="pipeline">Pipeline to use for imports.</param>
            <param name="session">Session to import into.</param>
            <param name="usePerStreamReaders">Optional flag indicating whether to use per-stream readers.</param>
            <returns>The newly created session importer.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.Contains(System.String)">
            <summary>
            Determines if any importer contains the named stream.
            </summary>
            <param name="streamName">The stream to search for.</param>
            <returns>true if any importer contains the named stream; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.HasStream(System.String,System.String)">
            <summary>
            Determines if a specific importer contains the named stream.
            </summary>
            <param name="partitionName">Partition name of the specific importer.</param>
            <param name="streamName">The stream to search for.</param>
            <returns>true if the specific importer contains the named stream; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.OpenStream``1(System.String,System.Func{``0},System.Action{``0})">
            <summary>
            Opens the first stream that matched the specified name.
            </summary>
            <typeparam name="T">The type of stream to open.</typeparam>
            <param name="streamName">The name of stream to open.</param>
            <param name="allocator">An optional allocator of messages.</param>
            <param name="deallocator">An optional deallocator to use after the messages have been sent out (defaults to disposing <see cref="T:System.IDisposable"/> messages.)</param>
            <returns>The opened stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.OpenStream``1(System.String,System.String,System.Func{``0},System.Action{``0})">
            <summary>
            Opens the named stream in a specific partition.
            </summary>
            <typeparam name="T">The type of stream to open.</typeparam>
            <param name="partitionName">The partition to open stream in.</param>
            <param name="streamName">The name of stream to open.</param>
            <param name="allocator">An optional allocator of messages.</param>
            <param name="deallocator">An optional deallocator to use after the messages have been sent out (defaults to disposing <see cref="T:System.IDisposable"/> messages.)</param>
            <returns>The opened stream.</returns>
        </member>
        <member name="M:Microsoft.Psi.Data.SessionImporter.GetContainingUsages(System.String)">
            <summary>
            Gets list of importer names that contain the named stream.
            </summary>
            <param name="streamName">The stream to search for.</param>
            <returns>The list of importer names that contain the named stream.</returns>
        </member>
    </members>
</doc>
